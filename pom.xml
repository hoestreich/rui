<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>CSRA_RUI</groupId>
	<artifactId>CSRA_RUI</artifactId>
	<version>0.1-SNAPSHOT</version>
	<!-- General project settings. -->

	<packaging>jar</packaging>

	<name>CSRA_RUI</name>

	<properties>
		<test.configs>${project.basedir}/target/generated-test-config</test.configs>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<target.java.version>1.6</target.java.version>
		<plugin.checkstyle.version>2.15</plugin.checkstyle.version>
		<plugin.pmd.version>3.5</plugin.pmd.version>
		<plugin.javadoc.version>2.10.3</plugin.javadoc.version>
		<failOnStyleError>true</failOnStyleError>
		<rsb.version>[0.12,0.13-SNAPSHOT)</rsb.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>rsb</groupId>
			<artifactId>rsb</artifactId>
			<version>${rsb.version}</version>
		</dependency>
		<dependency>
			<groupId>rsb</groupId>
			<artifactId>rst-sandbox</artifactId>
			<version>${rsb.version}</version>
		</dependency>
		<dependency>
			<groupId>rsb</groupId>
			<artifactId>rst</artifactId>
			<version>${rsb.version}</version>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.google.code.maven-replacer-plugin
										</groupId>
										<artifactId>
											replacer
										</artifactId>
										<versionRange>
											[1.5.3,)
										</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-pmd-plugin
										</artifactId>
										<versionRange>
											[3.5,)
										</versionRange>
										<goals>
											<goal>cpd-check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.gmaven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Generate checkstyle warnings on the command line during compilation -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${plugin.checkstyle.version}</version>
					<configuration>
						<configLocation>${project.basedir}/codecheck/checkstyle.xml</configLocation>
						<propertyExpansion>config_loc=${project.basedir}/codecheck</propertyExpansion>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<consoleOutput>true</consoleOutput>
						<violationSeverity>warning</violationSeverity>
						<failOnViolation>${failOnStyleError}</failOnViolation>
					</configuration>
					<executions>
						<execution>
							<id>checkstyle-validate</id>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Generate PMD warnings on the command line during compilation -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${plugin.pmd.version}</version>
					<configuration>
						<targetJdk>${target.java.version}</targetJdk>
						<rulesets>
							<ruleset>${project.basedir}/codecheck/pmd-rules.xml</ruleset>
						</rulesets>
						<failOnViolation>${failOnStyleError}</failOnViolation>
						<verbose>true</verbose>
					</configuration>
					<executions>
						<execution>
							<id>pmd-check</id>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
								<goal>cpd-check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Check the availability of different external dependencies. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.3</version>
					<executions>
						<execution>
							<id>enforce-external-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<!-- This makes it fail when the first check fails. -->
								<failFast>true</failFast>
								<rules>
									<requireJavaVersion>
										<!-- This defines the minimum version. -->
										<version>${target.java.version}</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<systemProperties>
							<property>
								<name>java.util.logging.config.file</name>
								<value>${test.configs}/logging.properties</value>
							</property>
						</systemProperties>
						<environmentVariables>
							<RSB_TRANSPORT_SPREAD_PORT>${spread.port}</RSB_TRANSPORT_SPREAD_PORT>
							<RSB_TRANSPORT_SOCKET_PORT>${socket.port}</RSB_TRANSPORT_SOCKET_PORT>
						</environmentVariables>
					</configuration>
				</plugin>

				<!-- Load the last git commit from gitversion. -->
				<plugin>
					<groupId>org.codehaus.gmaven</groupId>
					<artifactId>gmaven-plugin</artifactId>
					<version>1.4</version>
					<executions>
						<execution>
							<phase>generate-resources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<properties>
									<git.version.file>${project.basedir}/gitversion</git.version.file>
								</properties>
								<source>
									def file = new
									File(project.properties["git.version.file"])
									commit =
									file.getText().replaceFirst(/^.*-/,"")
									project.properties["git.commit"] = commit
								</source>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Settings for the generated JAR. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<!-- exclude examples from the jar file -->
						<excludes>
							<include>*.class</include>
						</excludes>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Last-Commit>${git.commit}</Last-Commit>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>


				<!-- Copied from reporting section because the documented inheritance 
					of options from the reporting section does not work. Cf. https://maven.apache.org/guides/mini/guide-configuring-plugins.html#Using_the_reporting_Tag_VS_build_Tag -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${plugin.javadoc.version}</version>
					<configuration>
						<show>protected</show>
						<excludePackageNames>spread</excludePackageNames>
						<quiet>true</quiet>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>appassembler-maven-plugin</artifactId>
					<version>1.8.1</version>
					<executions>
						<execution>
							<phase>install</phase>
							<goals>
								<goal>assemble</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<repositoryName>share/repository</repositoryName>
						<programs>
							<program>
								<mainClass>de.citec.csra.rui.Main</mainClass>
								<id>CSRA-RUI</id>
								<platforms>
									<platform>unix</platform>
								</platforms>
							</program>
						</programs>
						<copyConfigurationDirectory>true</copyConfigurationDirectory>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.zenjava</groupId>
					<artifactId>javafx-maven-plugin</artifactId>
					<version>8.1.4</version>
					<configuration>
						<mainClass>de.citec.csra.rui.Main</mainClass>
						<nativeInstallers />
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<!-- Generate cross-referenced HTML for the sources. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<!-- Generate Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${plugin.javadoc.version}</version>
				<configuration>
					<show>protected</show>
					<excludePackageNames>spread</excludePackageNames>
					<quiet>true</quiet>
				</configuration>
			</plugin>

			<!-- Also generate a PMD report. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${plugin.pmd.version}</version>
				<configuration>
					<targetJdk>${target.java.version}</targetJdk>
					<rulesets>
						<ruleset>${project.basedir}/codecheck/pmd-rules.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>

			<!-- Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${plugin.checkstyle.version}</version>
				<configuration>
					<configLocation>${project.basedir}/codecheck/checkstyle.xml</configLocation>
					<propertyExpansion>config_loc=${project.basedir}/codecheck</propertyExpansion>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
				</configuration>
			</plugin>

			<!-- Just so maven doesn't complain about a missing version. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>
		</plugins>
	</reporting>
	<repositories>
		<repository>
			<id>citec-releases</id>
			<name>CITEC Maven Repository Server</name>
			<url>https://mvn.cit-ec.de/nexus/content/repositories/releases/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>citec-snapshots</id>
			<name>CITEC Maven Repository Server</name>
			<url>https://mvn.cit-ec.de/nexus/content/repositories/snapshots/</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>